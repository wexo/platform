GitHub mirror:
    stage: Deploy
    image: alpine:latest
    only:
        refs:
            - master
    before_script:
        - apk --no-cache add git openssh-client
        - mkdir -p ~/.ssh/
        - echo -e "$SHOPWAREBOT_PRIVATE_KEY" > ~/.ssh/id_rsa
        - chmod 600 ~/.ssh/id_rsa
        - eval `ssh-agent -s`
        - ssh-add ~/.ssh/id_rsa
        - ssh-keyscan github.com >> ~/.ssh/known_hosts
    script:
        # split repositories
        - git remote add github git@github.com:shopware/platform.git
        - >
            for branch in $CI_MIRROR_BRANCHES; do
              echo "Mirroring ${branch}"
              git checkout $branch
              git push github $branch -f
            done

Repository Split:
    stage: Deploy
    image: debian:buster-slim
    before_script: []
    dependencies: []
    only:
        refs:
            - master
            - /^6\..*$/
            - saas-release
    environment:
        name: Github
        url: https://github.com/shopware
    script:
        - apt update && apt install -y wget git

        # download tool
        - wget https://github.com/splitsh/lite/releases/download/v1.0.1/lite_linux_amd64.tar.gz
        - tar xvfz lite_linux_amd64.tar.gz
        - chmod +x splitsh-lite

        # split repositories
        - >
            for pkg in Administration Docs Storefront Core Elasticsearch Recovery; do
              echo "Splitting ${pkg}"
              SHA1=`./splitsh-lite --prefix=src/$pkg/ --target=refs/heads/$pkg`
              git remote set-url origin https://bot:${PERSONAL_TOKEN}@gitlab.shopware.com/shopware/6/product/many-repositories/$(echo $pkg | awk '{print tolower($0)}').git
              git push origin $SHA1:$CI_COMMIT_REF_NAME -f
            done
